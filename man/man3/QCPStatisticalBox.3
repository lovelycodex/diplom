.TH "QCPStatisticalBox" 3 "Thu Jun 18 2015" "Version v.2" "Voice analyze" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QCPStatisticalBox \- A plottable representing a single statistical box in a plot\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQCPStatisticalBox\fP (\fBQCPAxis\fP *keyAxis, \fBQCPAxis\fP *valueAxis)"
.br
.ti -1c
.RI "double \fBkey\fP () const "
.br
.ti -1c
.RI "double \fBminimum\fP () const "
.br
.ti -1c
.RI "double \fBlowerQuartile\fP () const "
.br
.ti -1c
.RI "double \fBmedian\fP () const "
.br
.ti -1c
.RI "double \fBupperQuartile\fP () const "
.br
.ti -1c
.RI "double \fBmaximum\fP () const "
.br
.ti -1c
.RI "QVector< double > \fBoutliers\fP () const "
.br
.ti -1c
.RI "double \fBwidth\fP () const "
.br
.ti -1c
.RI "double \fBwhiskerWidth\fP () const "
.br
.ti -1c
.RI "QPen \fBwhiskerPen\fP () const "
.br
.ti -1c
.RI "QPen \fBwhiskerBarPen\fP () const "
.br
.ti -1c
.RI "QPen \fBmedianPen\fP () const "
.br
.ti -1c
.RI "\fBQCPScatterStyle\fP \fBoutlierStyle\fP () const "
.br
.ti -1c
.RI "void \fBsetKey\fP (double key)"
.br
.ti -1c
.RI "void \fBsetMinimum\fP (double value)"
.br
.ti -1c
.RI "void \fBsetLowerQuartile\fP (double value)"
.br
.ti -1c
.RI "void \fBsetMedian\fP (double value)"
.br
.ti -1c
.RI "void \fBsetUpperQuartile\fP (double value)"
.br
.ti -1c
.RI "void \fBsetMaximum\fP (double value)"
.br
.ti -1c
.RI "void \fBsetOutliers\fP (const QVector< double > &values)"
.br
.ti -1c
.RI "void \fBsetData\fP (double key, double minimum, double lowerQuartile, double median, double upperQuartile, double maximum)"
.br
.ti -1c
.RI "void \fBsetWidth\fP (double width)"
.br
.ti -1c
.RI "void \fBsetWhiskerWidth\fP (double width)"
.br
.ti -1c
.RI "void \fBsetWhiskerPen\fP (const QPen &pen)"
.br
.ti -1c
.RI "void \fBsetWhiskerBarPen\fP (const QPen &pen)"
.br
.ti -1c
.RI "void \fBsetMedianPen\fP (const QPen &pen)"
.br
.ti -1c
.RI "void \fBsetOutlierStyle\fP (const \fBQCPScatterStyle\fP &style)"
.br
.ti -1c
.RI "virtual void \fBclearData\fP ()"
.br
.ti -1c
.RI "virtual double \fBselectTest\fP (const QPointF &pos, bool onlySelectable, QVariant *details=0) const "
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBdraw\fP (\fBQCPPainter\fP *painter)"
.br
.ti -1c
.RI "virtual void \fBdrawLegendIcon\fP (\fBQCPPainter\fP *painter, const QRectF &rect) const "
.br
.ti -1c
.RI "virtual \fBQCPRange\fP \fBgetKeyRange\fP (bool &foundRange, \fBSignDomain\fP inSignDomain=\fBsdBoth\fP) const "
.br
.ti -1c
.RI "virtual \fBQCPRange\fP \fBgetValueRange\fP (bool &foundRange, \fBSignDomain\fP inSignDomain=\fBsdBoth\fP) const "
.br
.ti -1c
.RI "virtual void \fBdrawQuartileBox\fP (\fBQCPPainter\fP *painter, QRectF *quartileBox=0) const "
.br
.ti -1c
.RI "virtual void \fBdrawMedian\fP (\fBQCPPainter\fP *painter) const "
.br
.ti -1c
.RI "virtual void \fBdrawWhiskers\fP (\fBQCPPainter\fP *painter) const "
.br
.ti -1c
.RI "virtual void \fBdrawOutliers\fP (\fBQCPPainter\fP *painter) const "
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "QVector< double > \fBmOutliers\fP"
.br
.ti -1c
.RI "double \fBmKey\fP"
.br
.ti -1c
.RI "double \fBmMinimum\fP"
.br
.ti -1c
.RI "double \fBmLowerQuartile\fP"
.br
.ti -1c
.RI "double \fBmMedian\fP"
.br
.ti -1c
.RI "double \fBmUpperQuartile\fP"
.br
.ti -1c
.RI "double \fBmMaximum\fP"
.br
.ti -1c
.RI "double \fBmWidth\fP"
.br
.ti -1c
.RI "double \fBmWhiskerWidth\fP"
.br
.ti -1c
.RI "QPen \fBmWhiskerPen\fP"
.br
.ti -1c
.RI "QPen \fBmWhiskerBarPen\fP"
.br
.ti -1c
.RI "QPen \fBmMedianPen\fP"
.br
.ti -1c
.RI "\fBQCPScatterStyle\fP \fBmOutlierStyle\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBQCustomPlot\fP"
.br
.ti -1c
.RI "class \fBQCPLegend\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A plottable representing a single statistical box in a plot\&. 


.PP
To plot data, assign it with the individual parameter functions or use \fBsetData\fP to set all parameters at once\&. The individual functions are: 
.PD 0

.IP "\(bu" 2
\fBsetMinimum\fP 
.IP "\(bu" 2
\fBsetLowerQuartile\fP 
.IP "\(bu" 2
\fBsetMedian\fP 
.IP "\(bu" 2
\fBsetUpperQuartile\fP 
.IP "\(bu" 2
\fBsetMaximum\fP
.PP
Additionally you can define a list of outliers, drawn as scatter datapoints: 
.PD 0

.IP "\(bu" 2
\fBsetOutliers\fP
.PP
.SH "Changing the appearance"
.PP
The appearance of the box itself is controlled via \fBsetPen\fP and \fBsetBrush\fP\&. You may change the width of the box with \fBsetWidth\fP in plot coordinates (not pixels)\&.
.PP
Analog functions exist for the minimum/maximum-whiskers: \fBsetWhiskerPen\fP, \fBsetWhiskerBarPen\fP, \fBsetWhiskerWidth\fP\&. The whisker width is the width of the bar at the top (maximum) and bottom (minimum)\&.
.PP
The median indicator line has its own pen, \fBsetMedianPen\fP\&.
.PP
If the whisker backbone pen is changed, make sure to set the capStyle to Qt::FlatCap\&. Else, the backbone line might exceed the whisker bars by a few pixels due to the pen cap being not perfectly flat\&.
.PP
The Outlier data points are drawn as normal scatter points\&. Their look can be controlled with \fBsetOutlierStyle\fP
.SH "Usage"
.PP
Like all data representing objects in \fBQCustomPlot\fP, the \fBQCPStatisticalBox\fP is a plottable\&. Usually, you first create an instance and add it to the customPlot: 
.PP
.nf

.fi
.PP
and then modify the properties of the newly created plottable, e\&.g\&.: 
.PP
.nf

.fi
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "QCPStatisticalBox::QCPStatisticalBox (\fBQCPAxis\fP * keyAxis, \fBQCPAxis\fP * valueAxis)\fC [explicit]\fP"
Constructs a statistical box which uses \fIkeyAxis\fP as its key axis ('x') and \fIvalueAxis\fP as its value axis ('y')\&. \fIkeyAxis\fP and \fIvalueAxis\fP must reside in the same \fBQCustomPlot\fP instance and not have the same orientation\&. If either of these restrictions is violated, a corresponding message is printed to the debug output (qDebug), the construction is not aborted, though\&.
.PP
The constructed statistical box can be added to the plot with \fBQCustomPlot::addPlottable\fP, \fBQCustomPlot\fP then takes ownership of the statistical box\&. 
.SH "Member Function Documentation"
.PP 
.SS "void QCPStatisticalBox::clearData ()\fC [virtual]\fP"
Clears all data in the plottable\&. 
.PP
Implements \fBQCPAbstractPlottable\fP\&.
.SS "double QCPStatisticalBox::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = \fC0\fP) const\fC [virtual]\fP"
This function is used to decide whether a click hits a layerable object or not\&.
.PP
\fIpos\fP is a point in pixel coordinates on the \fBQCustomPlot\fP surface\&. This function returns the shortest pixel distance of this point to the object\&. If the object is either invisible or the distance couldn't be determined, -1\&.0 is returned\&. Further, if \fIonlySelectable\fP is true and the object is not selectable, -1\&.0 is returned, too\&.
.PP
If the object is represented not by single lines but by an area like a \fBQCPItemText\fP or the bars of a \fBQCPBars\fP plottable, a click inside the area should also be considered a hit\&. In these cases this function thus returns a constant value greater zero but still below the parent plot's selection tolerance\&. (typically the selectionTolerance multiplied by 0\&.99)\&.
.PP
Providing a constant value for area objects allows selecting line objects even when they are obscured by such area objects, by clicking close to the lines (i\&.e\&. closer than 0\&.99*selectionTolerance)\&.
.PP
The actual setting of the selection state is not done by this function\&. This is handled by the parent \fBQCustomPlot\fP when the mouseReleaseEvent occurs, and the finally selected object is notified via the selectEvent/deselectEvent methods\&.
.PP
\fIdetails\fP is an optional output parameter\&. Every layerable subclass may place any information in \fIdetails\fP\&. This information will be passed to \fBselectEvent\fP when the parent \fBQCustomPlot\fP decides on the basis of this selectTest call, that the object was successfully selected\&. The subsequent call to \fBselectEvent\fP will carry the \fIdetails\fP\&. This is useful for multi-part objects (like \fBQCPAxis\fP)\&. This way, a possibly complex calculation to decide which part was clicked is only done once in \fBselectTest\fP\&. The result (i\&.e\&. the actually clicked part) can then be placed in \fIdetails\fP\&. So in the subsequent \fBselectEvent\fP, the decision which part was selected doesn't have to be done a second time for a single selection operation\&.
.PP
You may pass 0 as \fIdetails\fP to indicate that you are not interested in those selection details\&.
.PP
\fBSee also:\fP
.RS 4
selectEvent, deselectEvent, \fBQCustomPlot::setInteractions\fP 
.RE
.PP

.PP
Implements \fBQCPAbstractPlottable\fP\&.
.SS "void QCPStatisticalBox::setData (double key, double minimum, double lowerQuartile, double median, double upperQuartile, double maximum)"
Sets all parameters of the statistical box plot at once\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetKey\fP, \fBsetMinimum\fP, \fBsetLowerQuartile\fP, \fBsetMedian\fP, \fBsetUpperQuartile\fP, \fBsetMaximum\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setKey (double key)"
Sets the key coordinate of the statistical box\&. 
.SS "void QCPStatisticalBox::setLowerQuartile (double value)"
Sets the parameter 'lower Quartile' of the statistical box plot\&. This is the lower end of the box\&. The lower and the upper quartiles are the two statistical quartiles around the median of the sample, they contain 50% of the sample data\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetUpperQuartile\fP, \fBsetPen\fP, \fBsetBrush\fP, \fBsetWidth\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setMaximum (double value)"
Sets the parameter 'maximum' of the statistical box plot\&. This is the position of the upper whisker, typically the maximum measurement of the sample that's not considered an outlier\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetMinimum\fP, \fBsetWhiskerPen\fP, \fBsetWhiskerBarPen\fP, \fBsetWhiskerWidth\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setMedian (double value)"
Sets the parameter 'median' of the statistical box plot\&. This is the value of the median mark inside the quartile box\&. The median separates the sample data in half (50% of the sample data is below/above the median)\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetMedianPen\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setMedianPen (const QPen & pen)"
Sets the pen used for drawing the median indicator line inside the statistical box\&. 
.SS "void QCPStatisticalBox::setMinimum (double value)"
Sets the parameter 'minimum' of the statistical box plot\&. This is the position of the lower whisker, typically the minimum measurement of the sample that's not considered an outlier\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetMaximum\fP, \fBsetWhiskerPen\fP, \fBsetWhiskerBarPen\fP, \fBsetWhiskerWidth\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setOutliers (const QVector< double > & values)"
Sets a vector of outlier values that will be drawn as scatters\&. Any data points in the sample that are not within the whiskers (\fBsetMinimum\fP, \fBsetMaximum\fP) should be considered outliers and displayed as such\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetOutlierStyle\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setOutlierStyle (const \fBQCPScatterStyle\fP & style)"
Sets the appearance of the outlier data points\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetOutliers\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setUpperQuartile (double value)"
Sets the parameter 'upper Quartile' of the statistical box plot\&. This is the upper end of the box\&. The lower and the upper quartiles are the two statistical quartiles around the median of the sample, they contain 50% of the sample data\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetLowerQuartile\fP, \fBsetPen\fP, \fBsetBrush\fP, \fBsetWidth\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setWhiskerBarPen (const QPen & pen)"
Sets the pen used for drawing the whisker bars (Those are the lines parallel to the key axis at each end of the whisker backbone)\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetWhiskerPen\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setWhiskerPen (const QPen & pen)"
Sets the pen used for drawing the whisker backbone (That's the line parallel to the value axis)\&.
.PP
Make sure to set the \fIpen\fP capStyle to Qt::FlatCap to prevent the whisker backbone from reaching a few pixels past the whisker bars, when using a non-zero pen width\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetWhiskerBarPen\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setWhiskerWidth (double width)"
Sets the width of the whiskers (\fBsetMinimum\fP, \fBsetMaximum\fP) in key coordinates\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetWidth\fP 
.RE
.PP

.SS "void QCPStatisticalBox::setWidth (double width)"
Sets the width of the box in key coordinates\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetWhiskerWidth\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Voice analyze from the source code\&.
