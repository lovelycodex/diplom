.TH "QCPItemBracket" 3 "Thu Jun 18 2015" "Version v.2" "Voice analyze" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QCPItemBracket \- A bracket for referencing/highlighting certain parts in the plot\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBBracketStyle\fP { \fBbsSquare\fP, \fBbsRound\fP, \fBbsCurly\fP, \fBbsCalligraphic\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQCPItemBracket\fP (\fBQCustomPlot\fP *parentPlot)"
.br
.ti -1c
.RI "QPen \fBpen\fP () const "
.br
.ti -1c
.RI "QPen \fBselectedPen\fP () const "
.br
.ti -1c
.RI "double \fBlength\fP () const "
.br
.ti -1c
.RI "\fBBracketStyle\fP \fBstyle\fP () const "
.br
.ti -1c
.RI "void \fBsetPen\fP (const QPen &pen)"
.br
.ti -1c
.RI "void \fBsetSelectedPen\fP (const QPen &pen)"
.br
.ti -1c
.RI "void \fBsetLength\fP (double length)"
.br
.ti -1c
.RI "void \fBsetStyle\fP (\fBBracketStyle\fP style)"
.br
.ti -1c
.RI "virtual double \fBselectTest\fP (const QPointF &pos, bool onlySelectable, QVariant *details=0) const "
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBQCPItemPosition\fP *const \fBleft\fP"
.br
.ti -1c
.RI "\fBQCPItemPosition\fP *const \fBright\fP"
.br
.ti -1c
.RI "\fBQCPItemAnchor\fP *const \fBcenter\fP"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum \fBAnchorIndex\fP { \fBaiCenter\fP }"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBdraw\fP (\fBQCPPainter\fP *painter)"
.br
.ti -1c
.RI "virtual QPointF \fBanchorPixelPoint\fP (int anchorId) const "
.br
.ti -1c
.RI "QPen \fBmainPen\fP () const "
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "QPen \fBmPen\fP"
.br
.ti -1c
.RI "QPen \fBmSelectedPen\fP"
.br
.ti -1c
.RI "double \fBmLength\fP"
.br
.ti -1c
.RI "\fBBracketStyle\fP \fBmStyle\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A bracket for referencing/highlighting certain parts in the plot\&. 

Bracket example\&. Blue dotted circles are anchors, solid blue discs are positions\&. It has two positions, \fIleft\fP and \fIright\fP, which define the span of the bracket\&. If \fIleft\fP is actually farther to the left than \fIright\fP, the bracket is opened to the bottom, as shown in the example image\&.
.PP
The bracket supports multiple styles via \fBsetStyle\fP\&. The length, i\&.e\&. how far the bracket stretches away from the embraced span, can be controlled with \fBsetLength\fP\&.
.PP
 Demonstrating the effect of different values for \fBsetLength\fP, for styles \fBbsCalligraphic\fP and \fBbsSquare\fP\&. Anchors and positions are displayed for reference\&.
.PP
It provides an anchor \fIcenter\fP, to allow connection of other items, e\&.g\&. an arrow (\fBQCPItemLine\fP or \fBQCPItemCurve\fP) or a text label (\fBQCPItemText\fP), to the bracket\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBQCPItemBracket::BracketStyle\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIbsSquare \fP\fP
A brace with angled edges\&. 
.TP
\fB\fIbsRound \fP\fP
A brace with round edges\&. 
.TP
\fB\fIbsCurly \fP\fP
A curly brace\&. 
.TP
\fB\fIbsCalligraphic \fP\fP
A curly brace with varying stroke width giving a calligraphic impression\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QCPItemBracket::QCPItemBracket (\fBQCustomPlot\fP * parentPlot)"
Creates a bracket item and sets default values\&.
.PP
The constructed item can be added to the plot with \fBQCustomPlot::addItem\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "double QCPItemBracket::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = \fC0\fP) const\fC [virtual]\fP"
This function is used to decide whether a click hits a layerable object or not\&.
.PP
\fIpos\fP is a point in pixel coordinates on the \fBQCustomPlot\fP surface\&. This function returns the shortest pixel distance of this point to the object\&. If the object is either invisible or the distance couldn't be determined, -1\&.0 is returned\&. Further, if \fIonlySelectable\fP is true and the object is not selectable, -1\&.0 is returned, too\&.
.PP
If the object is represented not by single lines but by an area like a \fBQCPItemText\fP or the bars of a \fBQCPBars\fP plottable, a click inside the area should also be considered a hit\&. In these cases this function thus returns a constant value greater zero but still below the parent plot's selection tolerance\&. (typically the selectionTolerance multiplied by 0\&.99)\&.
.PP
Providing a constant value for area objects allows selecting line objects even when they are obscured by such area objects, by clicking close to the lines (i\&.e\&. closer than 0\&.99*selectionTolerance)\&.
.PP
The actual setting of the selection state is not done by this function\&. This is handled by the parent \fBQCustomPlot\fP when the mouseReleaseEvent occurs, and the finally selected object is notified via the selectEvent/deselectEvent methods\&.
.PP
\fIdetails\fP is an optional output parameter\&. Every layerable subclass may place any information in \fIdetails\fP\&. This information will be passed to \fBselectEvent\fP when the parent \fBQCustomPlot\fP decides on the basis of this selectTest call, that the object was successfully selected\&. The subsequent call to \fBselectEvent\fP will carry the \fIdetails\fP\&. This is useful for multi-part objects (like \fBQCPAxis\fP)\&. This way, a possibly complex calculation to decide which part was clicked is only done once in \fBselectTest\fP\&. The result (i\&.e\&. the actually clicked part) can then be placed in \fIdetails\fP\&. So in the subsequent \fBselectEvent\fP, the decision which part was selected doesn't have to be done a second time for a single selection operation\&.
.PP
You may pass 0 as \fIdetails\fP to indicate that you are not interested in those selection details\&.
.PP
\fBSee also:\fP
.RS 4
selectEvent, deselectEvent, \fBQCustomPlot::setInteractions\fP 
.RE
.PP

.PP
Implements \fBQCPAbstractItem\fP\&.
.SS "void QCPItemBracket::setLength (double length)"
Sets the \fIlength\fP in pixels how far the bracket extends in the direction towards the embraced span of the bracket (i\&.e\&. perpendicular to the \fIleft\fP-\fIright\fP-direction)
.PP
 Demonstrating the effect of different values for \fBsetLength\fP, for styles \fBbsCalligraphic\fP and \fBbsSquare\fP\&. Anchors and positions are displayed for reference\&. 
.SS "void QCPItemBracket::setPen (const QPen & pen)"
Sets the pen that will be used to draw the bracket\&.
.PP
Note that when the style is \fBbsCalligraphic\fP, only the color will be taken from the pen, the stroke and width are ignored\&. To change the apparent stroke width of a calligraphic bracket, use \fBsetLength\fP, which has a similar effect\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetSelectedPen\fP 
.RE
.PP

.SS "void QCPItemBracket::setSelectedPen (const QPen & pen)"
Sets the pen that will be used to draw the bracket when selected
.PP
\fBSee also:\fP
.RS 4
\fBsetPen\fP, \fBsetSelected\fP 
.RE
.PP

.SS "void QCPItemBracket::setStyle (\fBQCPItemBracket::BracketStyle\fP style)"
Sets the style of the bracket, i\&.e\&. the shape/visual appearance\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetPen\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Voice analyze from the source code\&.
