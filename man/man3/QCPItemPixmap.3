.TH "QCPItemPixmap" 3 "Thu Jun 18 2015" "Version v.2" "Voice analyze" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QCPItemPixmap \- An arbitrary pixmap\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQCPItemPixmap\fP (\fBQCustomPlot\fP *parentPlot)"
.br
.ti -1c
.RI "QPixmap \fBpixmap\fP () const "
.br
.ti -1c
.RI "bool \fBscaled\fP () const "
.br
.ti -1c
.RI "Qt::AspectRatioMode \fBaspectRatioMode\fP () const "
.br
.ti -1c
.RI "Qt::TransformationMode \fBtransformationMode\fP () const "
.br
.ti -1c
.RI "QPen \fBpen\fP () const "
.br
.ti -1c
.RI "QPen \fBselectedPen\fP () const "
.br
.ti -1c
.RI "void \fBsetPixmap\fP (const QPixmap &pixmap)"
.br
.ti -1c
.RI "void \fBsetScaled\fP (bool scaled, Qt::AspectRatioMode aspectRatioMode=Qt::KeepAspectRatio, Qt::TransformationMode transformationMode=Qt::SmoothTransformation)"
.br
.ti -1c
.RI "void \fBsetPen\fP (const QPen &pen)"
.br
.ti -1c
.RI "void \fBsetSelectedPen\fP (const QPen &pen)"
.br
.ti -1c
.RI "virtual double \fBselectTest\fP (const QPointF &pos, bool onlySelectable, QVariant *details=0) const "
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBQCPItemPosition\fP *const \fBtopLeft\fP"
.br
.ti -1c
.RI "\fBQCPItemPosition\fP *const \fBbottomRight\fP"
.br
.ti -1c
.RI "\fBQCPItemAnchor\fP *const \fBtop\fP"
.br
.ti -1c
.RI "\fBQCPItemAnchor\fP *const \fBtopRight\fP"
.br
.ti -1c
.RI "\fBQCPItemAnchor\fP *const \fBright\fP"
.br
.ti -1c
.RI "\fBQCPItemAnchor\fP *const \fBbottom\fP"
.br
.ti -1c
.RI "\fBQCPItemAnchor\fP *const \fBbottomLeft\fP"
.br
.ti -1c
.RI "\fBQCPItemAnchor\fP *const \fBleft\fP"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum \fBAnchorIndex\fP { \fBaiTop\fP, \fBaiTopRight\fP, \fBaiRight\fP, \fBaiBottom\fP, \fBaiBottomLeft\fP, \fBaiLeft\fP }"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBdraw\fP (\fBQCPPainter\fP *painter)"
.br
.ti -1c
.RI "virtual QPointF \fBanchorPixelPoint\fP (int anchorId) const "
.br
.ti -1c
.RI "void \fBupdateScaledPixmap\fP (QRect finalRect=QRect(), bool flipHorz=false, bool flipVert=false)"
.br
.ti -1c
.RI "QRect \fBgetFinalRect\fP (bool *flippedHorz=0, bool *flippedVert=0) const "
.br
.ti -1c
.RI "QPen \fBmainPen\fP () const "
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "QPixmap \fBmPixmap\fP"
.br
.ti -1c
.RI "QPixmap \fBmScaledPixmap\fP"
.br
.ti -1c
.RI "bool \fBmScaled\fP"
.br
.ti -1c
.RI "Qt::AspectRatioMode \fBmAspectRatioMode\fP"
.br
.ti -1c
.RI "Qt::TransformationMode \fBmTransformationMode\fP"
.br
.ti -1c
.RI "QPen \fBmPen\fP"
.br
.ti -1c
.RI "QPen \fBmSelectedPen\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
An arbitrary pixmap\&. 

Pixmap example\&. Blue dotted circles are anchors, solid blue discs are positions\&. It has two positions, \fItopLeft\fP and \fIbottomRight\fP, which define the rectangle the pixmap will be drawn in\&. Depending on the scale setting (\fBsetScaled\fP), the pixmap will be either scaled to fit the rectangle or be drawn aligned to the topLeft position\&.
.PP
If scaling is enabled and \fItopLeft\fP is further to the bottom/right than \fIbottomRight\fP (as shown on the right side of the example image), the pixmap will be flipped in the respective orientations\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QCPItemPixmap::QCPItemPixmap (\fBQCustomPlot\fP * parentPlot)"
Creates a rectangle item and sets default values\&.
.PP
The constructed item can be added to the plot with \fBQCustomPlot::addItem\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "double QCPItemPixmap::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = \fC0\fP) const\fC [virtual]\fP"
This function is used to decide whether a click hits a layerable object or not\&.
.PP
\fIpos\fP is a point in pixel coordinates on the \fBQCustomPlot\fP surface\&. This function returns the shortest pixel distance of this point to the object\&. If the object is either invisible or the distance couldn't be determined, -1\&.0 is returned\&. Further, if \fIonlySelectable\fP is true and the object is not selectable, -1\&.0 is returned, too\&.
.PP
If the object is represented not by single lines but by an area like a \fBQCPItemText\fP or the bars of a \fBQCPBars\fP plottable, a click inside the area should also be considered a hit\&. In these cases this function thus returns a constant value greater zero but still below the parent plot's selection tolerance\&. (typically the selectionTolerance multiplied by 0\&.99)\&.
.PP
Providing a constant value for area objects allows selecting line objects even when they are obscured by such area objects, by clicking close to the lines (i\&.e\&. closer than 0\&.99*selectionTolerance)\&.
.PP
The actual setting of the selection state is not done by this function\&. This is handled by the parent \fBQCustomPlot\fP when the mouseReleaseEvent occurs, and the finally selected object is notified via the selectEvent/deselectEvent methods\&.
.PP
\fIdetails\fP is an optional output parameter\&. Every layerable subclass may place any information in \fIdetails\fP\&. This information will be passed to \fBselectEvent\fP when the parent \fBQCustomPlot\fP decides on the basis of this selectTest call, that the object was successfully selected\&. The subsequent call to \fBselectEvent\fP will carry the \fIdetails\fP\&. This is useful for multi-part objects (like \fBQCPAxis\fP)\&. This way, a possibly complex calculation to decide which part was clicked is only done once in \fBselectTest\fP\&. The result (i\&.e\&. the actually clicked part) can then be placed in \fIdetails\fP\&. So in the subsequent \fBselectEvent\fP, the decision which part was selected doesn't have to be done a second time for a single selection operation\&.
.PP
You may pass 0 as \fIdetails\fP to indicate that you are not interested in those selection details\&.
.PP
\fBSee also:\fP
.RS 4
selectEvent, deselectEvent, \fBQCustomPlot::setInteractions\fP 
.RE
.PP

.PP
Implements \fBQCPAbstractItem\fP\&.
.SS "void QCPItemPixmap::setPen (const QPen & pen)"
Sets the pen that will be used to draw a border around the pixmap\&.
.PP
\fBSee also:\fP
.RS 4
\fBsetSelectedPen\fP, setBrush 
.RE
.PP

.SS "void QCPItemPixmap::setPixmap (const QPixmap & pixmap)"
Sets the pixmap that will be displayed\&. 
.SS "void QCPItemPixmap::setScaled (bool scaled, Qt::AspectRatioMode aspectRatioMode = \fCQt::KeepAspectRatio\fP, Qt::TransformationMode transformationMode = \fCQt::SmoothTransformation\fP)"
Sets whether the pixmap will be scaled to fit the rectangle defined by the \fItopLeft\fP and \fIbottomRight\fP positions\&. 
.SS "void QCPItemPixmap::setSelectedPen (const QPen & pen)"
Sets the pen that will be used to draw a border around the pixmap when selected
.PP
\fBSee also:\fP
.RS 4
\fBsetPen\fP, \fBsetSelected\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Voice analyze from the source code\&.
